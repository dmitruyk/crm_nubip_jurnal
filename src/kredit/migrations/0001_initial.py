# Generated by Django 2.1 on 2019-05-22 22:47

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import kredit.user
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('turn_form', models.CharField(blank=True, choices=[('mr', 'Mr'), ('ms', 'Ms'), ('miss', 'Miss'), ('mrs', 'Mrs')], max_length=5, null=True, verbose_name='Turn form')),
                ('lang_form', models.CharField(blank=True, choices=[('en', 'ENG'), ('ru', 'РУС'), ('ua', 'УКР')], max_length=5, null=True, verbose_name='Lang form')),
                ('role', models.CharField(choices=[('company', 'Company'), ('partner', 'Partner'), ('super', 'Super')], max_length=10, verbose_name='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', kredit.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='APIClient',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('login', models.CharField(max_length=25)),
                ('password', models.CharField(blank=True, default=None, max_length=512, null=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'api_client',
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default=None, max_length=25)),
                ('uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('creation_date', models.DateField(default=None, verbose_name='creation_date')),
                ('send', models.DateField(blank=True, default=None, null=True, verbose_name='creation_date')),
                ('status', models.CharField(blank=True, choices=[('new', 'New'), ('sent', 'Sent'), ('received', 'Received'), ('approved', 'Approved'), ('refused', 'Refused'), ('issued', 'Isued')], default='new', max_length=10, null=True, verbose_name='type')),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='CreditOrganizationInfo',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='name')),
                ('contract_number', models.CharField(max_length=20, verbose_name='contract_number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner_info_credit_org', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'credit_organization_info',
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('first_name', models.CharField(max_length=200, verbose_name='customer_first_name')),
                ('last_name', models.CharField(max_length=200, verbose_name='customer_last_name')),
                ('add_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='customer_add_name')),
                ('date_of_birth', models.DateField(default=None, verbose_name='date_of_birth')),
                ('scoring_score', models.PositiveIntegerField(default=0, verbose_name='scoring_score')),
            ],
            options={
                'db_table': 'customer_profile_set',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('start_rotation', models.DateField(default=None, verbose_name='start_rotation')),
                ('end_rotation', models.DateField(default=None, verbose_name='start_rotation')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='name')),
                ('type', models.CharField(choices=[('need', 'NEED'), ('mortgage', 'MORTGAGE'), ('car_loan', 'CAR LOAN')], max_length=10, verbose_name='type')),
                ('min_scoring_score', models.PositiveIntegerField(default=0, verbose_name='min_scoring_score')),
                ('max_scoring_score', models.PositiveIntegerField(default=0, verbose_name='max_scoring_score')),
                ('credit_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kredit.CreditOrganizationInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_offer_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'offer',
            },
        ),
        migrations.CreateModel(
            name='PartnerInfo',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='name')),
                ('contract_number', models.CharField(max_length=20, verbose_name='contract_number')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_info_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'partner_info',
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='number')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='issue date')),
            ],
            options={
                'db_table': 'passport',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.UUIDField(editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('country_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='country_code')),
                ('area_code', models.CharField(blank=True, max_length=5, null=True, verbose_name='area_code')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='number')),
                ('type', models.CharField(blank=True, choices=[('main', 'Main'), ('work', 'Work'), ('home', 'Home'), ('other', 'Other')], default='main', max_length=5, null=True, verbose_name='type')),
            ],
            options={
                'db_table': 'phone_number',
            },
        ),
        migrations.AddField(
            model_name='customerprofile',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='kredit.PartnerInfo'),
        ),
        migrations.AddField(
            model_name='customerprofile',
            name='passport',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_info', to='kredit.Passport'),
        ),
        migrations.AddField(
            model_name='customerprofile',
            name='phone_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_info', to='kredit.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='application',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ap_customer', to='kredit.CustomerProfile'),
        ),
        migrations.AddField(
            model_name='application',
            name='offer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ap_offer', to='kredit.Offer'),
        ),
        migrations.AddField(
            model_name='apiclient',
            name='api_key',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='kredit.APIKey'),
        ),
        migrations.AddField(
            model_name='apiclient',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_user_client', to=settings.AUTH_USER_MODEL),
        ),
    ]
